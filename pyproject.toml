[build-system]
requires = ["hatchling>=1.17.0"]
build-backend = "hatchling.build"

[project]
name = "dev-guard"
version = "0.0.0"
description = "Developer-focused safety and policy utilities. Bootstrap package."
readme = "README.md"
authors = [
  { name = "Bret Bouchard", email = "bret@example.com" },
]
license = { text = "MIT" }
requires-python = ">=3.11,<3.12"
keywords = ["developer-tools", "safety", "policy"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Typing :: Typed",
]
dependencies = []

[project.urls]
Homepage = "https://github.com/bretbouchard/dev_guard"
Repository = "https://github.com/bretbouchard/dev_guard"

[project.optional-dependencies]
# For running tests
test = [
  "pytest>=8.2",
  "pytest-cov>=5.0",
]
# For local development
dev = [
  "mypy>=1.10",
  "ruff>=0.5.0",
  "black>=24.0.0",
  "isort>=5.13.0",
]

[tool.uv]
# uv recognizes this section for dev-time dependencies
dev-dependencies = [
  "mypy>=1.10",
  "ruff>=0.5.0",
  "black>=24.0.0",
  "isort>=5.13.0",
  "pytest>=8.2",
  "pytest-cov>=5.0",
]

# Poetry-compatible metadata for tooling that expects it.
[tool.poetry]
name = "dev-guard"
version = "0.0.0"
description = "Developer-focused safety and policy utilities. Bootstrap package."
readme = "README.md"
license = "MIT"
authors = ["Bret Bouchard <bret@example.com>"]
packages = [
  { include = "dev_guard", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"

[tool.poetry.group.dev.dependencies]
mypy = "^1.10"
ruff = "^0.5.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.2"
pytest-cov = "^5.0"

[tool.ruff]
line-length = 100
# Ensure we're linting/formatting with the correct Python version
# Valid options: "py37"-"py313"; we use Python 3.11 in this project
# https://docs.astral.sh/ruff/settings/#target-version
# Ruff uses this for both linting and formatting semantics
# (e.g., quote style, numeric literals, etc.).
target-version = "py311"

[tool.ruff.lint]
# Keep the default rule set, but ensure tidy-imports is enabled for banning parent-relative imports
# TID252: Relative imports from parent modules are banned
# https://docs.astral.sh/ruff/rules/relative-imports/
select = [
  "E", "F", "I", "UP", "B", "SIM", "TID"
]

[tool.ruff.lint.flake8-tidy-imports]
# Outlaw relative dot-dot imports (and any parent-relative imports)
# Options: "all" | "parents" | "siblings"
ban-relative-imports = "all"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
# Keep imports compatible with Black and align line length and py version
profile = "black"
line_length = 100
py_version = 311
known_first_party = ["dev_guard"]
force_sort_within_sections = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_ignores = true
strict_optional = true
check_untyped_defs = true
no_implicit_optional = true
